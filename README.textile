*Instructions*
* link vimrc to ~/.vimrc

*Active plugins*
* Abolish            (cr[c/m/_] to change case, :S/:%S for smart search/substitute with variations in {}, record abbreviations in after/plugin/abolish.vim)
* Ack                (&lt;Leader&gt;a search repo, &lt;Leader&gt;K search help, output in quickfix)
* Argumentative      (argument text objects aa ia, shift arguments <a >a)
* BufOnly            (&lt;Leader&gt;bo removes all other open buffers)
* CtrlP              (&lt;Leader&gt;n to open window, quick find file in project, C-F switch type, C-Z/C-O to mark/open, C-V vsplit, CR opens, &lt;Leader&gt;] ctrlpTag)
* EasyMotion         (H and L to specify specific letter to go to, back/forward)
* Exchange           (cx{motion} twice to exchange regions, cxx twice to exchange lines)
* Expand-Region      (with a visual selection, + and - to expand/shrink the selected region)
* Fugitive           (&lt;Leader&gt;gs/gc/gd/gl/gp - status (- stage/unstage, p patch, C commit), commit, diff, log, push, diffput/get to stage/checkout, :Gedit)
* Jedi-vim           (python autocomplete library, better gd, &lt;space&gt;g goto, &lt;space&gt;k pydoc, &lt;space&gt;r refactor, &lt;ctl-space&gt; autocomplete)
* Latex-suite        (templates - &lt;Leader&gt;tt, macros - EEQ/SSS/`a/`D, F7 expands commands, F9 completes labels/cites, &lt;Leader&gt;ll compiles [visual]) <-- overkill
* Multiple Cursors   (&lt;c-n&gt; repeatedly to select matches, in visual mode to convert region to multiple cursors)
* NERDCommenter      (&lt;Leader&gt;c&lt;space&gt;/ci/cm/cb/cA)
* NERDTree           (&lt;Leader&gt;N opens directory tree, o, s, t to open/vsplit/tab, C changeroot, r refresh, I hidden files)
* Operator-Replace   (R is multipurpose replace command, Rib, "xR$, etc)
* Quicktask          (notes plugin, :QTInit to create quicktask, mappings on &lt;space&gt;)
* SkyBison           (better command line, &lt;space&gt;; to display, cmap &lt;c-l&gt; to switch)
* Snipmate           (expands snippets after, date:tab:, for:tab: ifmain:tab: etc)
* Speeddating        (&lt;C-A&gt; and &lt;C-X&gt; increment/decrement times and dates, visual do ranges)
* Surround           (s text object when followed by bracket/tag/paren/quote/etc)
* Switch             ('-' toggles preset words, e.g., true->TRUE->True->true)
* Syntastic          (run checker on files on open/save-store in location list, [f, ]f for errors)
* Tagbar             (better taglist, ;tl, o to toggle fold, space/enter)
* Tern For Vim       (javascript tags - <s>dd/s/v go to def, t type, r refs, R rename, b browse)
* Textobj-Column     (text objects ac aC ic iC for manipulating blocks)
* Textobj-Entire     (defines entire buffer text objects, ae, ie)
* Textobj-Indent     (defines indent text objects, ai aI ii iI)
* Textobj-Line       (defines line text objects, al il)
* Textobj-Underscore (defines _ for surrounding textobjects)
* Unimpaired         (consistent [ and ] motions, [&lt;space&gt; adds spaces, [e exchanges lines, [b buffer navigation)
* Vimux              (! and ;! run a tmux pane with new command/last command)

*Passive plugins*
* Airline            (better statusbar)
* DelimitMate        (supply closing braces/parens/etc)
* Easytags           (automatically manage tags)
* GitGutter          (uses the sign column to indicate git changes/adds/removes)
* JS-lib-support     (syntax highlighting for jquery, underscore, backbone, etc)
* Mash               (highlight current searched for term differently)
* MatchIt            (extends % to if/else/endif, can configure more matchpairs)
* Operator-User      (utility plugin for defining new operators)
* Rainbow Paren.     (colored nested parentheses/brackets/etc)
* Repeat             (utility plugin to allow . to work for plugin mappings)
* Recover            (better handling of vim recovery files, can merge on startup)
* RelOps             (modifies operators to display relative line numberings)
* Rhubarb            (github support for fugitive :Gbrowse)
* Textobj-User       (utility plugin for defining text objects)
* Tmux               (syntax highlighting and filetype recognition for tmux)
* Tmux-Focus-Gained  (restore focus autocmds in vim in tmux)
* Vim-indent-lines   (indent guidelines)
* Vim-javascript     (syntax highlighting, indent rules, and conceal for javascript)
* Vim-json           (better highlighting and conceal)
* Vim-jsx            (syntax highlighting for jsx files)
* Vim-misc           (support for easytags plugin)

*Included colorscheme*
* IR_Black

*General modifications*
** Can open .doc/.odt/.pdf/.rtf files (read-only)
** Can launch external browser for .png/.jpg/.gif/.bmp images
** Diff commands -> df, dF, du
 
*Language specific settings*
* Python
** python-mode folding and motions on [[, [M, [m, am, iM, etc
** snippets - #!, docs, wh, cl, def, deff, defs, property, ld, ., try, ifmain, _, ae, from
** jedi-vim autocomplete library, preview window, goto, function definition, lookup docs, refactor
** can compile with and evaluate visual blocks with &lt;space&gt;d
** <space>b/B adds/removes breakpoints
** run file in left/below tmux window, pipe to less/column with &lt;space&gt;l/j, &lt;space&gt;[LJ]c/l
** X makes executable script
* C/C++
** &lt;space&gt;c -> comment comment block beginning //- 
** &lt;space&gt;C -> add end of block/#endif comment markers
** &lt;space&gt;g/G -> color "#ifdef DEBUG" blocks as comments
** &lt;space&gt;hf/hl/hL/... -> open corresponding header/source file in appropriate window
** &lt;space&gt;p/P -> read prototypes from header file (cpp only)
** &lt;space&gt;v/V -> selects inner/outer function
** surround with f/i/w (i.e., v:motion:Sf) to add for/if/while blocks around code
** snippets - c/cc/ch/cf/chh
* Objective-C
** &lt;space&gt;mF/mh/mH/... -> create GNUmakefile in appropriate window
** &lt;space&gt;R/rr/rc/rl -> run in tmux pane/remove nslog info/pipe to column/less)
* Ocaml, SML indent scripts
* LaTeX 

*Required programs*
* pdftotext, odt2txt, antiword, unrtf, python, ruby, eog

*Compiling
* vim7.3 - @./configure --with-features=huge --enable-rubyinterp=yes --enable-pythoninterp=yes

vim:ft=textile:
